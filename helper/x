  local python2_version="$1"

  local python2_folder_name="Python-${python2_version}"
  local python2_archive="${python2_folder_name}.tar.xz"
  local python2_url="https://www.python.org/ftp/python/${python2_version}/${python2_archive}"

  local python2_stamp_file_path="${STAMPS_FOLDER_PATH}/stamp-python2-${python2_version}-installed"
  if [ ! -f "${python2_stamp_file_path}" -o ! -d "${BUILD_FOLDER_PATH}/${python2_folder_name}" ]
  then

    cd "${SOURCES_FOLDER_PATH}"

    download_and_extract "${python2_url}" "${python2_archive}" "${python2_folder_name}"

    (
      mkdir -p "${BUILD_FOLDER_PATH}/${python2_folder_name}"
      cd "${BUILD_FOLDER_PATH}/${python2_folder_name}"

      xbb_activate

      export CPPFLAGS="${XBB_CPPFLAGS}"
      # export CFLAGS="${XBB_CFLAGS} -Wno-int-in-bool-context -Wno-maybe-uninitialized -Wno-nonnull -Wno-stringop-overflow"
      export CFLAGS="${XBB_CFLAGS} -Wno-nonnull"
      export CXXFLAGS="${XBB_CXXFLAGS}"
      export LDFLAGS="${XBB_LDFLAGS_APP}"

      if [ "${HOST_UNAME}" == "Darwin" ]
      then
        # error: variably modified 'bytes' at file scope
        export CC=clang
        export CXX=clang++
      fi

      if [ ! -f "config.status" ]
      then
        (
          echo
          echo "Running python2 configure..."

          bash "${SOURCES_FOLDER_PATH}/${python2_folder_name}/configure" --help

          # Fail on macOS:
          # --enable-universalsdk 
          # --with-universal-archs=${HOST_BITS}-bit

          # "... you should not skip tests when using --enable-optimizations as 
          # the data required for profiling is generated by running tests".

          bash ${DEBUG} "${SOURCES_FOLDER_PATH}/${python2_folder_name}/configure" \
            --prefix="${INSTALL_FOLDER_PATH}" \
            \
            --with-threads \
            --with-system-expat \
            --with-system-ffi \
            --with-dbmliborder=gdbm:ndbm \
            --with-libiconv=native \
            --without-ensurepip \
            --with-lto \
            \
            --enable-shared \
            --enable-optimizations \
            --enable-unicode=ucs4 \

          cp "config.log" "${LOGS_FOLDER_PATH}/config-python2-log.txt"
        ) 2>&1 | tee "${LOGS_FOLDER_PATH}/configure-python2-output.txt"
      fi

      (
        echo
        echo "Running python2 make..."

        # Build.
        make -j ${JOBS}

        # make install-strip
        make install

        if [ "${HOST_UNAME}" == "Darwin" ]
        then
          strip "${XBB_FOLDER}/bin/python"
        else
          strip --strip-all "${XBB_FOLDER}/bin/python"
        fi
      ) 2>&1 | tee "${LOGS_FOLDER_PATH}/make-python2-output.txt"
    )

    (
      xbb_activate_installed_bin
      
      # Install setuptools and pip. Be sure the new version is used.
      # https://packaging.python.org/tutorials/installing-packages/
      echo
      echo "Installing setuptools and pip..."

      "${INSTALL_FOLDER_PATH}/bin/python" --version

      "${INSTALL_FOLDER_PATH}/bin/python2" -m ensurepip --default-pip
      "${INSTALL_FOLDER_PATH}/bin/python2" -m pip install --upgrade pip setuptools wheel
      
      "${INSTALL_FOLDER_PATH}/bin/pip2" --version
    ) 2>&1 | tee "${LOGS_FOLDER_PATH}/make-python2-pip-output.txt"

    (
      xbb_activate_installed_bin

      echo
      "${INSTALL_FOLDER_PATH}/bin/python" --version
    )

    hash -r

    touch "${python2_stamp_file_path}"

  else
    echo "Component python2 already installed."
  fi
